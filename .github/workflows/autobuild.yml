name: 打包
on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag'
        required: true
        default: 'v0.0.5'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: echo (node -p -e '`VERSION=${require("./package.json").version}`') >> $Env:GITHUB_ENV
      - run: npm install
      - run: npm run package
      - uses: maotoumao/inno-setup-action-cli@main
        with:
          filepath: ./release/build-windows.iss
          variables: /DMyAppVersion=${{ env.VERSION }} /DMyAppId=${{ secrets.MYAPPID }}
      - name: Upload Setup
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: ./out/MusicFreeSetup.exe
      - name: Generate Portable
        run: mkdir ./out/MusicFree-win32-x64/portable
      - uses: vimtor/action-zip@v1.1
        with:
          files: ./out/MusicFree-win32-x64
          dest: MusicFree-win32-x64-portable.zip
      - name: Upload Portable
        uses: actions/upload-artifact@v4
        with:
          name: windows-portable-release
          path: ${{ github.workspace }}/MusicFree-win32-x64-portable.zip

  build-windows-legacy:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: echo (node -p -e '`VERSION=${require("./package.json").version}`') >> $Env:GITHUB_ENV
      - run: npm install
      - run: npm install electron@22
      - run: npm run package
      - uses: maotoumao/inno-setup-action-cli@main
        with:
          filepath: ./release/build-windows.iss
          variables: /DMyAppVersion=${{ env.VERSION }} /DMyAppId=${{ secrets.MYAPPID }}
      - name: Upload Setup
        uses: actions/upload-artifact@v4
        with:
          name: windows-legacy-release
          path: ./out/MusicFreeSetup.exe
      - name: Generate Portable
        run: mkdir ./out/MusicFree-win32-x64/portable
      - uses: vimtor/action-zip@v1.1
        with:
          files: ./out/MusicFree-win32-x64
          dest: MusicFree-win32-x64-legacy-portable.zip
      - name: Upload Portable
        uses: actions/upload-artifact@v4
        with:
          name: windows-legacy-portable-release
          path: ${{ github.workspace }}/MusicFree-win32-x64-legacy-portable.zip

  build-macos-x64:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: node -p -e '`VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      - run: npm install
      - run: npm run make
      - run: ls ./out/make
      - name: Upload Setup
        uses: actions/upload-artifact@v4
        with:
          name: macos-x64-dmg-release
          path: ./out/make/MusicFree-${{ env.VERSION }}-x64.dmg

  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: node -p -e '`VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      - run: npm install
      - run: npm run make -- --arch="arm64"
      - name: Upload Setup
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm64-dmg-release
          path: ./out/make/MusicFree-${{ env.VERSION }}-arm64.dmg

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: node -p -e '`VERSION=${require("./package.json").version}`' >> $GITHUB_ENV
      - run: npm install
      - run: npm run make
      - name: Upload Setup
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-release
          path: ./out/make/deb/x64/

  create-release:
    needs: [build-windows, build-windows-legacy, build-macos-x64, build-macos-arm64, build-ubuntu]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          release_name: Release ${{ github.event.inputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-release/MusicFreeSetup.exe
          asset_name: MusicFreeSetup.exe
          asset_content_type: application/octet-stream
      - name: Upload Portable Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-portable-release/MusicFree-win32-x64-portable.zip
          asset_name: MusicFree-win32-x64-portable.zip
          asset_content_type: application/zip
      - name: Upload Legacy Setup
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-legacy-release/MusicFreeSetup.exe
          asset_name: MusicFreeSetup-legacy.exe
          asset_content_type: application/octet-stream
      - name: Upload Legacy Portable Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows-legacy-portable-release/MusicFree-win32-x64-legacy-portable.zip
          asset_name: MusicFree-win32-x64-legacy-portable.zip
          asset_content_type: application/zip
      - name: Upload macOS x64 Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos-x64-dmg-release/MusicFree-${{ env.VERSION }}-x64.dmg
          asset_name: MusicFree-x64.dmg
          asset_content_type: application/x-apple-diskimage
      - name: Upload macOS arm64 Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos-arm64-dmg-release/MusicFree-${{ env.VERSION }}-arm64.dmg
          asset_name: MusicFree-arm64.dmg
          asset_content_type: application/x-apple-diskimage
      - name: Upload Ubuntu Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu-release
          asset_name: MusicFree-ubuntu.deb
          asset_content_type: application/x-debian-package
